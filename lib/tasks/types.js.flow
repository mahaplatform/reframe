// @flow

export type Action = {items: Array<Object>, type: "OPEN"} | {type: "CLOSE"} | {type: "CLEAR"};
export type ChildContext = {tasks: {close: () => void, open: (items: Array<Object>) => void}};
export type Clear = {type: "CLEAR"};
export type Close = {type: "CLOSE"};
export type Done = () => void;
export type Item = Object;
export type Items = Array<Object>;
export type Open = {items: Array<Object>, type: "OPEN"};
export type Props = {children: any, items: Array<Object>, onClear: () => void, onClose: () => void, onOpen: (items: Array<Object>) => void, open: boolean};
export type State = {+items: ?Array<Object>, +open: boolean};

declare module.exports: {};