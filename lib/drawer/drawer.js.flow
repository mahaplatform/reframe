// @flow

import _ from "lodash";
import React from "react";
import PropTypes from "prop-types";
import {CSSTransition} from "react-transition-group";
import type {Component, Location, Props, ChildContext} from "./types";
declare export default class extends React$Component<{children: any, component: any, location: "left" | "right", onClear: () => void, onClose: () => void, onOpen: (component: any, location: "left" | "right") => {component: any, location: "left" | "right", type: "OPEN"}, open: boolean}> {
  static childContextTypes: any;
  static propTypes: {children: any, component: any, location: any, onClear: any, onClose: any, onOpen: any, open: any} | any;

  _handleClose(): void;
  _handleOpen(component: any, location: "left" | "right"): void;
  componentDidUpdate(prevProps: {children: any, component: any, location: "left" | "right", onClear: () => void, onClose: () => void, onOpen: (component: any, location: "left" | "right") => {component: any, location: "left" | "right", type: "OPEN"}, open: boolean}): void;
  getChildContext(): {drawer: {close: () => void, open: (component: any, location: "left" | "right") => void}};
  render(): $Exact<{+key: string | number | null, +props: mixed /* UNEXPECTED TYPE: EvalT */, +ref: any, +type: ElementType}>;
}
