// @flow

import React from "react";
import Options from "./options";
import Dynamic from "./dynamic";
import Infinite from "../infinite";
import Searchbox from "../searchbox";
import type {Node} from "../../types";
import type {SearchProps as Props, DynamicProps, OptionsProps, InfiniteProps} from "./types";
declare export default class extends React$Component<{endpoint: string, format: any, label: string, multiple: boolean, name: string, onQuery: () => void, onUpdate: (name: string, values: any) => void, options: Array<{record?: any, text: string, token?: any, value: string}>, q: string, results: any, sort: string}, void> {

  _getDynamic(): {endpoint: string, format: any, label: string, multiple: boolean, name: string, onQuery: () => void, onUpdate: (name: string, values: any) => void, options: Array<{record?: any, text: string, token?: any, value: string}>, q: string, results: any, sort: string};
  _getInfinite(): {endpoint: string, filter: Object, layout: (props: {format: any, multiple: boolean, name: string, onUpdate: (name: string, values: any) => void, options: Array<{record?: any, text: string, token?: any, value: string}>, records: any, results: any, status: string, text: string, value: string}) => any, sort: string};
  _getOptions(): {format: any, multiple: boolean, name: string, onUpdate: (name: string, values: any) => void, options: Array<{record?: any, text: string, token?: any, value: string}>, results: any};
  _getSearchbox(): {onChange: () => void, prompt: string};
  render(): any;
}
