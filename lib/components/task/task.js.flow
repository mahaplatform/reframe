// @flow

import PropTypes from "prop-types";
import React from "react";
import type {Handler, ItemRequest, Props} from "./types";
import type {Location} from "../../containers/drawer/types";
import type {Component, Node} from "../../types";
declare export default class extends React$Component<{className?: string, component: any, confirm?: string, disabled?: boolean, drawer: any, handler: () => void, icon?: string, label: string, location: "left" | "right", mobile?: boolean, modal: any, onDone: () => void, onRequest: (itemRequest: {body: any, endpoint: string, method: any, onFailure: any, onSuccess: any, params: any}) => any, request: {body: any, endpoint: string, method: any, onFailure: any, onSuccess: any, params: any}, route: string}, void> {
  static contextTypes: any;
  static defaultProps: {disabled: boolean, onDone: () => void};

  _getClass(): string;
  _handleChoose(index: number): void;
  _handleDrawer(component: any, location: "left" | "right"): void;
  _handleFunction(handler: (done: () => void) => void): void;
  _handleModal(component: any): void;
  _handleRequest(itemRequest: {body: any, endpoint: string, method: any, onFailure: any, onSuccess: any, params: any}): void;
  _handleRoute(route: string): void;
  render(): any;
}
