'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var setSections = exports.setSections = function setSections(sections) {
  return {
    type: 'SET_SECTIONS',
    sections: sections
  };
};

var fetchSections = exports.fetchSections = function fetchSections(endpoint) {
  return {
    type: 'API_REQUEST',
    method: 'GET',
    endpoint: endpoint,
    request: 'FETCH_SECTIONS_REQUEST',
    success: 'FETCH_SECTIONS_SUCCESS',
    failure: 'FETCH_SECTIONS_FAILURE'
  };
};

var fetchData = exports.fetchData = function fetchData(endpoint, defaults) {
  return {
    type: 'API_REQUEST',
    method: 'GET',
    endpoint: endpoint,
    meta: { defaults: defaults },
    request: 'FETCH_DATA_REQUEST',
    success: 'FETCH_DATA_SUCCESS',
    failure: 'FETCH_DATA_FAILURE'
  };
};

var pop = exports.pop = function pop() {
  var num = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
  return {
    type: 'POP',
    num: num
  };
};

var push = exports.push = function push(component) {
  return {
    type: 'PUSH',
    component: component
  };
};

var setData = exports.setData = function setData(data) {
  return {
    type: 'SET_DATA',
    data: data
  };
};

var setReady = exports.setReady = function setReady(field) {
  return {
    type: 'SET_READY',
    field: field
  };
};

var toggleBusy = exports.toggleBusy = function toggleBusy(field) {
  return {
    type: 'TOGGLE_BUSY',
    field: field
  };
};

var updateData = exports.updateData = function updateData(key, value) {
  return {
    type: 'UPDATE_DATA',
    key: key,
    value: value
  };
};

var updateField = exports.updateField = function updateField(sectionIndex, fieldIndex, field) {
  return {
    type: 'UPDATE_FIELD',
    sectionIndex: sectionIndex,
    fieldIndex: fieldIndex,
    field: field
  };
};

var submitForm = exports.submitForm = function submitForm(method, endpoint, body) {
  return {
    type: 'API_REQUEST',
    method: method,
    body: body,
    endpoint: endpoint,
    request: 'SUBMIT_REQUEST',
    success: 'SUBMIT_SUCCESS',
    failure: 'SUBMIT_FAILURE'
  };
};

var reset = exports.reset = function reset() {
  return {
    type: 'RESET'
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVua25vd24iXSwibmFtZXMiOlsic2V0U2VjdGlvbnMiLCJzZWN0aW9ucyIsInR5cGUiLCJmZXRjaFNlY3Rpb25zIiwiZW5kcG9pbnQiLCJtZXRob2QiLCJyZXF1ZXN0Iiwic3VjY2VzcyIsImZhaWx1cmUiLCJmZXRjaERhdGEiLCJkZWZhdWx0cyIsIm1ldGEiLCJwb3AiLCJudW0iLCJwdXNoIiwiY29tcG9uZW50Iiwic2V0RGF0YSIsImRhdGEiLCJzZXRSZWFkeSIsImZpZWxkIiwidG9nZ2xlQnVzeSIsInVwZGF0ZURhdGEiLCJrZXkiLCJ2YWx1ZSIsInVwZGF0ZUZpZWxkIiwic2VjdGlvbkluZGV4IiwiZmllbGRJbmRleCIsInN1Ym1pdEZvcm0iLCJib2R5IiwicmVzZXQiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sSUFBTUEsb0NBQWMsU0FBZEEsV0FBYyxDQUFDQyxRQUFEO0FBQUEsU0FBZTtBQUN4Q0MsVUFBTSxjQURrQztBQUV4Q0Q7QUFGd0MsR0FBZjtBQUFBLENBQXBCOztBQUtBLElBQU1FLHdDQUFnQixTQUFoQkEsYUFBZ0IsQ0FBQ0MsUUFBRDtBQUFBLFNBQWU7QUFDMUNGLFVBQU0sYUFEb0M7QUFFMUNHLFlBQVEsS0FGa0M7QUFHMUNELHNCQUgwQztBQUkxQ0UsYUFBUyx3QkFKaUM7QUFLMUNDLGFBQVMsd0JBTGlDO0FBTTFDQyxhQUFTO0FBTmlDLEdBQWY7QUFBQSxDQUF0Qjs7QUFTQSxJQUFNQyxnQ0FBWSxTQUFaQSxTQUFZLENBQUNMLFFBQUQsRUFBV00sUUFBWDtBQUFBLFNBQXlCO0FBQ2hEUixVQUFNLGFBRDBDO0FBRWhERyxZQUFRLEtBRndDO0FBR2hERCxzQkFIZ0Q7QUFJaERPLFVBQU0sRUFBRUQsa0JBQUYsRUFKMEM7QUFLaERKLGFBQVMsb0JBTHVDO0FBTWhEQyxhQUFTLG9CQU51QztBQU9oREMsYUFBUztBQVB1QyxHQUF6QjtBQUFBLENBQWxCOztBQVVBLElBQU1JLG9CQUFNLFNBQU5BLEdBQU07QUFBQSxNQUFDQyxHQUFELHVFQUFPLENBQVA7QUFBQSxTQUFjO0FBQy9CWCxVQUFNLEtBRHlCO0FBRS9CVztBQUYrQixHQUFkO0FBQUEsQ0FBWjs7QUFLQSxJQUFNQyxzQkFBTyxTQUFQQSxJQUFPLENBQUNDLFNBQUQ7QUFBQSxTQUFnQjtBQUNsQ2IsVUFBTSxNQUQ0QjtBQUVsQ2E7QUFGa0MsR0FBaEI7QUFBQSxDQUFiOztBQUtBLElBQU1DLDRCQUFVLFNBQVZBLE9BQVUsQ0FBQ0MsSUFBRDtBQUFBLFNBQVc7QUFDaENmLFVBQU0sVUFEMEI7QUFFaENlO0FBRmdDLEdBQVg7QUFBQSxDQUFoQjs7QUFLQSxJQUFNQyw4QkFBVyxTQUFYQSxRQUFXLENBQUNDLEtBQUQ7QUFBQSxTQUFZO0FBQ2xDakIsVUFBTSxXQUQ0QjtBQUVsQ2lCO0FBRmtDLEdBQVo7QUFBQSxDQUFqQjs7QUFLQSxJQUFNQyxrQ0FBYSxTQUFiQSxVQUFhLENBQUNELEtBQUQ7QUFBQSxTQUFZO0FBQ3BDakIsVUFBTSxhQUQ4QjtBQUVwQ2lCO0FBRm9DLEdBQVo7QUFBQSxDQUFuQjs7QUFLQSxJQUFNRSxrQ0FBYSxTQUFiQSxVQUFhLENBQUNDLEdBQUQsRUFBTUMsS0FBTjtBQUFBLFNBQWlCO0FBQ3pDckIsVUFBTSxhQURtQztBQUV6Q29CLFlBRnlDO0FBR3pDQztBQUh5QyxHQUFqQjtBQUFBLENBQW5COztBQU1BLElBQU1DLG9DQUFjLFNBQWRBLFdBQWMsQ0FBQ0MsWUFBRCxFQUFlQyxVQUFmLEVBQTJCUCxLQUEzQjtBQUFBLFNBQXNDO0FBQy9EakIsVUFBTSxjQUR5RDtBQUUvRHVCLDhCQUYrRDtBQUcvREMsMEJBSCtEO0FBSS9EUDtBQUorRCxHQUF0QztBQUFBLENBQXBCOztBQU9BLElBQU1RLGtDQUFhLFNBQWJBLFVBQWEsQ0FBQ3RCLE1BQUQsRUFBU0QsUUFBVCxFQUFtQndCLElBQW5CO0FBQUEsU0FBNkI7QUFDckQxQixVQUFNLGFBRCtDO0FBRXJERyxrQkFGcUQ7QUFHckR1QixjQUhxRDtBQUlyRHhCLHNCQUpxRDtBQUtyREUsYUFBUyxnQkFMNEM7QUFNckRDLGFBQVMsZ0JBTjRDO0FBT3JEQyxhQUFTO0FBUDRDLEdBQTdCO0FBQUEsQ0FBbkI7O0FBVUEsSUFBTXFCLHdCQUFRLFNBQVJBLEtBQVE7QUFBQSxTQUFPO0FBQzFCM0IsVUFBTTtBQURvQixHQUFQO0FBQUEsQ0FBZCIsImZpbGUiOiJ1bmtub3duIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHNldFNlY3Rpb25zID0gKHNlY3Rpb25zKSA9PiAoe1xuICB0eXBlOiAnU0VUX1NFQ1RJT05TJyxcbiAgc2VjdGlvbnNcbn0pXG5cbmV4cG9ydCBjb25zdCBmZXRjaFNlY3Rpb25zID0gKGVuZHBvaW50KSA9PiAoe1xuICB0eXBlOiAnQVBJX1JFUVVFU1QnLFxuICBtZXRob2Q6ICdHRVQnLFxuICBlbmRwb2ludCxcbiAgcmVxdWVzdDogJ0ZFVENIX1NFQ1RJT05TX1JFUVVFU1QnLFxuICBzdWNjZXNzOiAnRkVUQ0hfU0VDVElPTlNfU1VDQ0VTUycsXG4gIGZhaWx1cmU6ICdGRVRDSF9TRUNUSU9OU19GQUlMVVJFJ1xufSlcblxuZXhwb3J0IGNvbnN0IGZldGNoRGF0YSA9IChlbmRwb2ludCwgZGVmYXVsdHMpID0+ICh7XG4gIHR5cGU6ICdBUElfUkVRVUVTVCcsXG4gIG1ldGhvZDogJ0dFVCcsXG4gIGVuZHBvaW50LFxuICBtZXRhOiB7IGRlZmF1bHRzIH0sXG4gIHJlcXVlc3Q6ICdGRVRDSF9EQVRBX1JFUVVFU1QnLFxuICBzdWNjZXNzOiAnRkVUQ0hfREFUQV9TVUNDRVNTJyxcbiAgZmFpbHVyZTogJ0ZFVENIX0RBVEFfRkFJTFVSRSdcbn0pXG5cbmV4cG9ydCBjb25zdCBwb3AgPSAobnVtID0gMSkgPT4gKHtcbiAgdHlwZTogJ1BPUCcsXG4gIG51bVxufSlcblxuZXhwb3J0IGNvbnN0IHB1c2ggPSAoY29tcG9uZW50KSA9PiAoe1xuICB0eXBlOiAnUFVTSCcsXG4gIGNvbXBvbmVudFxufSlcblxuZXhwb3J0IGNvbnN0IHNldERhdGEgPSAoZGF0YSkgPT4gKHtcbiAgdHlwZTogJ1NFVF9EQVRBJyxcbiAgZGF0YVxufSlcblxuZXhwb3J0IGNvbnN0IHNldFJlYWR5ID0gKGZpZWxkKSA9PiAoe1xuICB0eXBlOiAnU0VUX1JFQURZJyxcbiAgZmllbGRcbn0pXG5cbmV4cG9ydCBjb25zdCB0b2dnbGVCdXN5ID0gKGZpZWxkKSA9PiAoe1xuICB0eXBlOiAnVE9HR0xFX0JVU1knICxcbiAgZmllbGRcbn0pXG5cbmV4cG9ydCBjb25zdCB1cGRhdGVEYXRhID0gKGtleSwgdmFsdWUpID0+ICh7XG4gIHR5cGU6ICdVUERBVEVfREFUQScsXG4gIGtleSxcbiAgdmFsdWVcbn0pXG5cbmV4cG9ydCBjb25zdCB1cGRhdGVGaWVsZCA9IChzZWN0aW9uSW5kZXgsIGZpZWxkSW5kZXgsIGZpZWxkKSA9PiAoe1xuICB0eXBlOiAnVVBEQVRFX0ZJRUxEJyxcbiAgc2VjdGlvbkluZGV4LFxuICBmaWVsZEluZGV4LFxuICBmaWVsZFxufSlcblxuZXhwb3J0IGNvbnN0IHN1Ym1pdEZvcm0gPSAobWV0aG9kLCBlbmRwb2ludCwgYm9keSkgPT4gKHtcbiAgdHlwZTogJ0FQSV9SRVFVRVNUJyxcbiAgbWV0aG9kLFxuICBib2R5LFxuICBlbmRwb2ludCxcbiAgcmVxdWVzdDogJ1NVQk1JVF9SRVFVRVNUJyxcbiAgc3VjY2VzczogJ1NVQk1JVF9TVUNDRVNTJyxcbiAgZmFpbHVyZTogJ1NVQk1JVF9GQUlMVVJFJ1xufSlcblxuZXhwb3J0IGNvbnN0IHJlc2V0ID0gKCkgPT4gKHtcbiAgdHlwZTogJ1JFU0VUJ1xufSlcbiJdfQ==