'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var INITIAL_VALUE = {
  active: false,
  value: null,
  month: null,
  year: null
};

var setCurrent = function setCurrent(state, action) {
  return (0, _extends3.default)({}, state, {
    month: action.month,
    year: action.year
  });
};

var setValue = function setValue(state, action) {
  return (0, _extends3.default)({}, state, {
    value: action.value
  });
};

var previous = function previous(state, action) {
  return (0, _extends3.default)({}, state, {
    month: state.month !== null ? state.month === 0 ? 11 : state.month - 1 : null,
    year: state.year !== null ? state.month === 0 ? state.year - 1 : state.year : null
  });
};

var next = function next(state, action) {
  return (0, _extends3.default)({}, state, {
    month: state.month !== null ? state.month === 11 ? 0 : state.month + 1 : null,
    year: state.year !== null ? state.month === 11 ? state.year + 1 : state.year : null
  });
};

var begin = function begin(state, action) {
  return (0, _extends3.default)({}, state, {
    active: true
  });
};

var cancel = function cancel(state, action) {
  return (0, _extends3.default)({}, state, {
    active: false
  });
};

var choose = function choose(state, action) {
  return (0, _extends3.default)({}, state, {
    value: action.value,
    active: false
  });
};

var clear = function clear(state, action) {
  return (0, _extends3.default)({}, state, {
    value: null
  });
};

var reducer = function reducer() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_VALUE;
  var action = arguments[1];


  switch (action.type) {

    case 'SET_CURRENT':
      return setCurrent(state, action);

    case 'SET_VALUE':
      return setValue(state, action);

    case 'PREVIOUS':
      return previous(state, action);

    case 'NEXT':
      return next(state, action);

    case 'BEGIN':
      return begin(state, action);

    case 'CANCEL':
      return cancel(state, action);

    case 'CHOOSE':
      return choose(state, action);

    case 'CLEAR':
      return clear(state, action);

    default:
      return state;

  }
};

exports.default = reducer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVua25vd24iXSwibmFtZXMiOlsiSU5JVElBTF9WQUxVRSIsImFjdGl2ZSIsInZhbHVlIiwibW9udGgiLCJ5ZWFyIiwic2V0Q3VycmVudCIsInN0YXRlIiwiYWN0aW9uIiwic2V0VmFsdWUiLCJwcmV2aW91cyIsIm5leHQiLCJiZWdpbiIsImNhbmNlbCIsImNob29zZSIsImNsZWFyIiwicmVkdWNlciIsInR5cGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBLElBQU1BLGdCQUFnQjtBQUNwQkMsVUFBUSxLQURZO0FBRXBCQyxTQUFPLElBRmE7QUFHcEJDLFNBQU8sSUFIYTtBQUlwQkMsUUFBTTtBQUpjLENBQXRCOztBQU9BLElBQU1DLGFBQWEsU0FBYkEsVUFBYSxDQUFDQyxLQUFELEVBQVFDLE1BQVI7QUFBQSxvQ0FDZEQsS0FEYztBQUVqQkgsV0FBT0ksT0FBT0osS0FGRztBQUdqQkMsVUFBTUcsT0FBT0g7QUFISTtBQUFBLENBQW5COztBQU1BLElBQU1JLFdBQVcsU0FBWEEsUUFBVyxDQUFDRixLQUFELEVBQVFDLE1BQVI7QUFBQSxvQ0FDWkQsS0FEWTtBQUVmSixXQUFPSyxPQUFPTDtBQUZDO0FBQUEsQ0FBakI7O0FBS0EsSUFBTU8sV0FBVyxTQUFYQSxRQUFXLENBQUNILEtBQUQsRUFBUUMsTUFBUjtBQUFBLG9DQUNaRCxLQURZO0FBRWZILFdBQU9HLE1BQU1ILEtBQU4sS0FBZ0IsSUFBaEIsR0FBd0JHLE1BQU1ILEtBQU4sS0FBZ0IsQ0FBaEIsR0FBb0IsRUFBcEIsR0FBeUJHLE1BQU1ILEtBQU4sR0FBYyxDQUEvRCxHQUFvRSxJQUY1RDtBQUdmQyxVQUFNRSxNQUFNRixJQUFOLEtBQWUsSUFBZixHQUF1QkUsTUFBTUgsS0FBTixLQUFnQixDQUFoQixHQUFvQkcsTUFBTUYsSUFBTixHQUFhLENBQWpDLEdBQXFDRSxNQUFNRixJQUFsRSxHQUEwRTtBQUhqRTtBQUFBLENBQWpCOztBQU1BLElBQU1NLE9BQU8sU0FBUEEsSUFBTyxDQUFDSixLQUFELEVBQVFDLE1BQVI7QUFBQSxvQ0FDUkQsS0FEUTtBQUVYSCxXQUFPRyxNQUFNSCxLQUFOLEtBQWdCLElBQWhCLEdBQXdCRyxNQUFNSCxLQUFOLEtBQWdCLEVBQWhCLEdBQXFCLENBQXJCLEdBQXlCRyxNQUFNSCxLQUFOLEdBQWMsQ0FBL0QsR0FBb0UsSUFGaEU7QUFHWEMsVUFBTUUsTUFBTUYsSUFBTixLQUFlLElBQWYsR0FBdUJFLE1BQU1ILEtBQU4sS0FBZ0IsRUFBaEIsR0FBcUJHLE1BQU1GLElBQU4sR0FBYSxDQUFsQyxHQUFzQ0UsTUFBTUYsSUFBbkUsR0FBMkU7QUFIdEU7QUFBQSxDQUFiOztBQU1BLElBQU1PLFFBQVEsU0FBUkEsS0FBUSxDQUFDTCxLQUFELEVBQVFDLE1BQVI7QUFBQSxvQ0FDVEQsS0FEUztBQUVaTCxZQUFRO0FBRkk7QUFBQSxDQUFkOztBQUtBLElBQU1XLFNBQVMsU0FBVEEsTUFBUyxDQUFDTixLQUFELEVBQVFDLE1BQVI7QUFBQSxvQ0FDVkQsS0FEVTtBQUViTCxZQUFRO0FBRks7QUFBQSxDQUFmOztBQUtBLElBQU1ZLFNBQVMsU0FBVEEsTUFBUyxDQUFDUCxLQUFELEVBQVFDLE1BQVI7QUFBQSxvQ0FDVkQsS0FEVTtBQUViSixXQUFPSyxPQUFPTCxLQUZEO0FBR2JELFlBQVE7QUFISztBQUFBLENBQWY7O0FBTUEsSUFBTWEsUUFBUSxTQUFSQSxLQUFRLENBQUNSLEtBQUQsRUFBUUMsTUFBUjtBQUFBLG9DQUNURCxLQURTO0FBRVpKLFdBQU87QUFGSztBQUFBLENBQWQ7O0FBS0EsSUFBTWEsVUFBVSxTQUFWQSxPQUFVLEdBQW1DO0FBQUEsTUFBbENULEtBQWtDLHVFQUExQk4sYUFBMEI7QUFBQSxNQUFYTyxNQUFXOzs7QUFFakQsVUFBUUEsT0FBT1MsSUFBZjs7QUFFQSxTQUFLLGFBQUw7QUFDRSxhQUFPWCxXQUFXQyxLQUFYLEVBQWtCQyxNQUFsQixDQUFQOztBQUVGLFNBQUssV0FBTDtBQUNFLGFBQU9DLFNBQVNGLEtBQVQsRUFBZ0JDLE1BQWhCLENBQVA7O0FBRUYsU0FBSyxVQUFMO0FBQ0UsYUFBT0UsU0FBU0gsS0FBVCxFQUFnQkMsTUFBaEIsQ0FBUDs7QUFFRixTQUFLLE1BQUw7QUFDRSxhQUFPRyxLQUFLSixLQUFMLEVBQVlDLE1BQVosQ0FBUDs7QUFFRixTQUFLLE9BQUw7QUFDRSxhQUFPSSxNQUFNTCxLQUFOLEVBQWFDLE1BQWIsQ0FBUDs7QUFFRixTQUFLLFFBQUw7QUFDRSxhQUFPSyxPQUFPTixLQUFQLEVBQWNDLE1BQWQsQ0FBUDs7QUFFRixTQUFLLFFBQUw7QUFDRSxhQUFPTSxPQUFPUCxLQUFQLEVBQWNDLE1BQWQsQ0FBUDs7QUFFRixTQUFLLE9BQUw7QUFDRSxhQUFPTyxNQUFNUixLQUFOLEVBQWFDLE1BQWIsQ0FBUDs7QUFFRjtBQUNFLGFBQU9ELEtBQVA7O0FBM0JGO0FBK0JELENBakNEOztrQkFtQ2VTLE8iLCJmaWxlIjoidW5rbm93biIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IElOSVRJQUxfVkFMVUUgPSB7XG4gIGFjdGl2ZTogZmFsc2UsXG4gIHZhbHVlOiBudWxsLFxuICBtb250aDogbnVsbCxcbiAgeWVhcjogbnVsbFxufVxuXG5jb25zdCBzZXRDdXJyZW50ID0gKHN0YXRlLCBhY3Rpb24pID0+ICh7XG4gIC4uLnN0YXRlLFxuICBtb250aDogYWN0aW9uLm1vbnRoLFxuICB5ZWFyOiBhY3Rpb24ueWVhclxufSlcblxuY29uc3Qgc2V0VmFsdWUgPSAoc3RhdGUsIGFjdGlvbikgPT4gKHtcbiAgLi4uc3RhdGUsXG4gIHZhbHVlOiBhY3Rpb24udmFsdWVcbn0pXG5cbmNvbnN0IHByZXZpb3VzID0gKHN0YXRlLCBhY3Rpb24pID0+ICh7XG4gIC4uLnN0YXRlLFxuICBtb250aDogc3RhdGUubW9udGggIT09IG51bGwgPyAoc3RhdGUubW9udGggPT09IDAgPyAxMSA6IHN0YXRlLm1vbnRoIC0gMSkgOiBudWxsLFxuICB5ZWFyOiBzdGF0ZS55ZWFyICE9PSBudWxsID8gKHN0YXRlLm1vbnRoID09PSAwID8gc3RhdGUueWVhciAtIDEgOiBzdGF0ZS55ZWFyKSA6IG51bGxcbn0pXG5cbmNvbnN0IG5leHQgPSAoc3RhdGUsIGFjdGlvbikgPT4gKHtcbiAgLi4uc3RhdGUsXG4gIG1vbnRoOiBzdGF0ZS5tb250aCAhPT0gbnVsbCA/IChzdGF0ZS5tb250aCA9PT0gMTEgPyAwIDogc3RhdGUubW9udGggKyAxKSA6IG51bGwsXG4gIHllYXI6IHN0YXRlLnllYXIgIT09IG51bGwgPyAoc3RhdGUubW9udGggPT09IDExID8gc3RhdGUueWVhciArIDEgOiBzdGF0ZS55ZWFyKSA6IG51bGxcbn0pXG5cbmNvbnN0IGJlZ2luID0gKHN0YXRlLCBhY3Rpb24pID0+ICh7XG4gIC4uLnN0YXRlLFxuICBhY3RpdmU6IHRydWVcbn0pXG5cbmNvbnN0IGNhbmNlbCA9IChzdGF0ZSwgYWN0aW9uKSA9PiAoe1xuICAuLi5zdGF0ZSxcbiAgYWN0aXZlOiBmYWxzZVxufSlcblxuY29uc3QgY2hvb3NlID0gKHN0YXRlLCBhY3Rpb24pID0+ICh7XG4gIC4uLnN0YXRlLFxuICB2YWx1ZTogYWN0aW9uLnZhbHVlLFxuICBhY3RpdmU6IGZhbHNlXG59KVxuXG5jb25zdCBjbGVhciA9IChzdGF0ZSwgYWN0aW9uKSA9PiAoe1xuICAuLi5zdGF0ZSxcbiAgdmFsdWU6IG51bGxcbn0pXG5cbmNvbnN0IHJlZHVjZXIgPSAoc3RhdGUgPSBJTklUSUFMX1ZBTFVFLCBhY3Rpb24pID0+IHtcblxuICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG5cbiAgY2FzZSAnU0VUX0NVUlJFTlQnOlxuICAgIHJldHVybiBzZXRDdXJyZW50KHN0YXRlLCBhY3Rpb24pXG5cbiAgY2FzZSAnU0VUX1ZBTFVFJzpcbiAgICByZXR1cm4gc2V0VmFsdWUoc3RhdGUsIGFjdGlvbilcblxuICBjYXNlICdQUkVWSU9VUyc6XG4gICAgcmV0dXJuIHByZXZpb3VzKHN0YXRlLCBhY3Rpb24pXG5cbiAgY2FzZSAnTkVYVCc6XG4gICAgcmV0dXJuIG5leHQoc3RhdGUsIGFjdGlvbilcblxuICBjYXNlICdCRUdJTic6XG4gICAgcmV0dXJuIGJlZ2luKHN0YXRlLCBhY3Rpb24pXG5cbiAgY2FzZSAnQ0FOQ0VMJzpcbiAgICByZXR1cm4gY2FuY2VsKHN0YXRlLCBhY3Rpb24pXG5cbiAgY2FzZSAnQ0hPT1NFJzpcbiAgICByZXR1cm4gY2hvb3NlKHN0YXRlLCBhY3Rpb24pXG5cbiAgY2FzZSAnQ0xFQVInOlxuICAgIHJldHVybiBjbGVhcihzdGF0ZSwgYWN0aW9uKVxuXG4gIGRlZmF1bHQ6XG4gICAgcmV0dXJuIHN0YXRlXG5cbiAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IHJlZHVjZXJcbiJdfQ==